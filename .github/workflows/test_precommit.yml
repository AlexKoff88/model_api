# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Precommit - Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Python-Code-Quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Create and start a virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install isort
        pip install black
    - name: Check style with black
      run: |
        source venv/bin/activate
        black --check .
    - name: Check style with isort
      run: |
        source venv/bin/activate
        isort --check .
  Python-Precommit:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install model_api/python/[tests]
    - name: Test with Pytest
      run: |
        pytest tests/python/
  Cppcheck:
    name: cppcheck-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
          
      - name: cppcheck
        uses: deep5050/cppcheck-action@main 
        with:
          other_options: --bug-hunting --verbose --std=c11
